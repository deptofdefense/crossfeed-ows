{"version":3,"sources":["webpack:///./src/components/sidenav.js","webpack:///./src/templates/documentation-page.js","webpack:///./node_modules/classnames/index.js"],"names":["SidenavContributing","name","className","to","classNames","SidenavUserGuide","pageQuery","DocumentationPage","markdownRemark","data","frontmatter","html","fields","title","sidenav","id","dangerouslySetInnerHTML","__html","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default"],"mappings":";+NASaA,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjC,2BAAOC,UAAU,+DACf,6BACE,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,gBACHD,UAAWE,IAAW,CAAE,cAAwB,iBAATH,KAFzC,4BAOF,wBAAIC,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,SACHD,UAAWE,IAAW,CAAE,cAAwB,UAATH,KAFzC,sBAOF,wBAAIC,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,gBACHD,UAAWE,IAAW,CAAE,cAAwB,iBAATH,KAFzC,iBAOF,wBAAIC,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,cACHD,UAAWE,IAAW,CAAE,cAAwB,eAATH,KAFzC,mBAYGI,EAAmB,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAH,OAC9B,2BAAOC,UAAU,+DACf,6BACE,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,oBACHD,UAAWE,IAAW,CACpB,cAAwB,qBAATH,KAHnB,+BASF,wBAAIC,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,SACHD,UAAWE,IAAW,CAAE,cAAwB,UAATH,KAFzC,oBAOF,wBAAIC,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,kBACHD,UAAWE,IAAW,CAAE,cAAwB,mBAATH,KAFzC,mBAOF,wBAAIC,UAAU,qBACZ,kBAAC,OAAD,CACEC,GAAG,iBACHD,UAAWE,IAAW,CAAE,cAAwB,kBAATH,KAFzC,sBCjCGK,EAAS,aAiBPC,UAnDW,SAAC,GAAc,IAC/BC,EAD8B,EAAXC,KACnBD,eACAE,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAE3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOH,EAAYG,QACxB,yBAAKX,UAAU,+BACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACY,iBAAxBQ,EAAYI,SACX,kBAAC,EAAD,CAAqBb,KAAMW,EAAOX,OAEX,eAAxBS,EAAYI,SACX,kBAAC,EAAD,CAAkBb,KAAMW,EAAOX,OAGjC,0BACEc,GAAG,eACHb,UAAU,sDAEV,4BAAKQ,EAAYG,OACjB,yBACEX,UAAU,YACVc,wBAAyB,CAAEC,OAAQN,Y,qBCtCnD,OAOA,WACE,aAEA,IAAIO,EAAS,GAAGC,eAEhB,SAASf,IAGP,IAFA,IAAIgB,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC3C,IAAIM,EAAQzB,EAAW0B,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAIM,KAAOP,EACVN,EAAOc,KAAKR,EAAKO,IAAQP,EAAIO,IAC/BX,EAAQM,KAAKK,IAMrB,OAAOX,EAAQa,KAAK,KAGeC,EAAOC,SAC1C/B,EAAWgC,QAAUhC,EACrB8B,EAAOC,QAAU/B,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL","file":"component---src-templates-documentation-page-js-e2ee631809d786a9ee26.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport classNames from 'classnames';\n\n/*\n  The sidenav is not loaded by default on the main pages. To include this navigation you can\n  add \"sidenav: contributing\" or \"sidenav: user-guide\" in the front-matter of your markdown pages\n*/\n\nexport const SidenavContributing = ({ name }) => (\n  <aside className=\"usa-layout-docs-sidenav desktop:grid-col-3 padding-bottom-4\">\n    <nav>\n      <ul className=\"usa-sidenav\">\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/contributing\"\n            className={classNames({ 'usa-current': name === 'contributing' })}\n          >\n            Contribution Guidelines\n          </Link>\n        </li>\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/setup\"\n            className={classNames({ 'usa-current': name === 'setup' })}\n          >\n            Development Setup\n          </Link>\n        </li>\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/architecture\"\n            className={classNames({ 'usa-current': name === 'architecture' })}\n          >\n            Architecture\n          </Link>\n        </li>\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/deployment\"\n            className={classNames({ 'usa-current': name === 'deployment' })}\n          >\n            Deployment\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </aside>\n);\n\nexport const SidenavUserGuide = ({ name }) => (\n  <aside className=\"usa-layout-docs-sidenav desktop:grid-col-3 padding-bottom-4\">\n    <nav>\n      <ul className=\"usa-sidenav\">\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/product-overview\"\n            className={classNames({\n              'usa-current': name === 'product-overview',\n            })}\n          >\n            Crossfeed Product Overview\n          </Link>\n        </li>\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/usage\"\n            className={classNames({ 'usa-current': name === 'usage' })}\n          >\n            Getting Started\n          </Link>\n        </li>\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/administration\"\n            className={classNames({ 'usa-current': name === 'administration' })}\n          >\n            Administration\n          </Link>\n        </li>\n        <li className=\"usa-sidenav__item\">\n          <Link\n            to=\"/customization\"\n            className={classNames({ 'usa-current': name === 'customization' })}\n          >\n            Customization\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </aside>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Sidenav, {\n  SidenavContributing,\n  SidenavUserGuide,\n} from '../components/sidenav';\n\n/*\n  This template is for a single page that does not have a date associated with it. For example, an about page.\n*/\n\nconst DocumentationPage = ({ data }) => {\n  const { markdownRemark } = data;\n  const { frontmatter, html, fields } = markdownRemark;\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"usa-layout-docs usa-section\">\n        <div className=\"grid-container\">\n          <div className=\"grid-row grid-gap\">\n            {frontmatter.sidenav === 'contributing' && (\n              <SidenavContributing name={fields.name} />\n            )}\n            {frontmatter.sidenav === 'user-guide' && (\n              <SidenavUserGuide name={fields.name} />\n            )}\n\n            <main\n              id=\"main-content\"\n              className=\"usa-layout-docs__main desktop:grid-col-9 usa-prose\"\n            >\n              <h2>{frontmatter.title}</h2>\n              <div\n                className=\"usa-prose\"\n                dangerouslySetInnerHTML={{ __html: html }}\n              />\n            </main>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($name: String!) {\n    markdownRemark(\n      fields: { sourceName: { eq: \"documentation-pages\" }, name: { eq: $name } }\n    ) {\n      html\n      frontmatter {\n        title\n        sidenav\n      }\n      fields {\n        name\n      }\n    }\n  }\n`;\n\nexport default DocumentationPage;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}